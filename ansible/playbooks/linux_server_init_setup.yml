---
- hosts: orangepi
  become: true

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Setup passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Set authorized key for root user
      ansible.posix.authorized_key:
        user: "{{ root_user }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

    - name: Disable password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'

    - name: Update apt and install required system packages
      apt:
        pkg:
          - curl
          - vim
          - git
          - ufw
          - nano
          - tmux
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - mc
          - nmap
          - ncdu
        state: latest
        update_cache: true

    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Incoming deny
      community.general.ufw:
        direction: incoming
        policy: deny

    - name: UFW - Enable and deny by default
      ufw:
        state: enabled
        default: deny

    - name: UFW - Set logging
      ufw:
        logging: 'medium'

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: install docker compose
      apt:
        name: docker-compose-plugin
        state: latest
        update_cache: true

    - name: rsyslog - Install rsyslog
      apt:
        name: rsyslog
        state: present

    - name: rsyslog - Start service rsyslog, if not started
      ansible.builtin.service:
        name: rsyslog
        state: started

    - name: rsyslog - Enable service rsyslog to start on boot
      ansible.builtin.service:
        name: rsyslog
        enabled: yes

    - name: Restart service ssh, in all cases
      ansible.builtin.service:
        name: ssh
        state: restarted

    - name: Create directory for Portainer
      file:
          path: "{{ portainer_dir }}"
          state: directory
          mode: 0755

    - name: Create a .env file
      ansible.builtin.template:
        src: initial/.env
        dest: "{{ portainer_dir }}"

    - name: Create a docker-compose.yml file
      ansible.builtin.template:
        src: initial/docker-compose.yml
        dest: "{{ portainer_dir }}"

    - name: Create a proxy network
      docker_network:
        name: proxy
        ipam_config:
          - subnet: 192.168.0.0/24

    - name: Run `docker-compose up`
      command: "sudo docker compose -f {{ portainer_dir }}/docker-compose.yml up -d --force-recreate"
