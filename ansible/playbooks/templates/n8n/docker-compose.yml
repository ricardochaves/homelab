version: "3.8"
services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.entrypoints=http"
      - "traefik.http.routers.n8n.rule=Host(`n8n.home.ricardobaltazar.com`)"
      - "traefik.http.middlewares.n8n-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.n8n.middlewares=n8n-https-redirect"
      - "traefik.http.routers.n8n-secure.entrypoints=https"
      - "traefik.http.routers.n8n-secure.rule=Host(`n8n.home.ricardobaltazar.com`)"
      - "traefik.http.routers.n8n-secure.tls=true"
      - "traefik.http.routers.n8n-secure.service=n8n"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.docker.network=proxy"
    volumes:
      - n8n-master-data:/home/node/.n8n
    networks:
      n8n:
      proxy:
        ipv4_address: ${N8N_PROXY_IP}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: "wget --no-verbose --tries=3 --spider http://localhost:5678/healthz || exit 1"
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s

  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      n8n:

  db:
    image: postgres:16.2-alpine3.19
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data:z
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      n8n:

volumes:
  n8n-master-data:
  pgdata:
  redis-data:

networks:
  proxy:
    external: true
  n8n:
    driver: "bridge"
    ipam:
      config:
        - subnet: "172.16.0.0/27"
          gateway: "172.16.0.1"